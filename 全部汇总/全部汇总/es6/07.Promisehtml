<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Title</title>
</head>
<body>

</body>
<script>


    /*数据结构：是一组数据的集合
    已知：Array，Object
    Set：无重复的数据集合
    Map：允许多种的类型的键值，（值-值）
    * */
    /*Set的创建*/
    var s = new Set([1,1,1,1,1,2,3,4,2,3]);
    console.log(s);//1,2,3,4
    /*set长度的获得*/
    // console.log(s.size);
    /*值的添加*/
    // s.add(9);
    // s.add(9);
    /*删除指定项*/
    // s.delete(1);
    /*清空*/
    // s.clear();
    // console.log(s);
    /*判断某值的存在性*/
    // console.log(s.has(100))
    // console.log(s.values());
    /*set的遍历方式*/
    // s.forEach(function (value) {
    //     console.log(value);
    // })

    /*for of用于一个迭代（iterator）的对象的遍历*/
    // var arr = [1,2,3,4];
    // for(var v of arr){
    //     console.log(v);
    // }
    //输出set的值
    /**for(var v of s.values()){
        console.log(v);
    }
    //输出索引和值
    for(var v of s.entries()){
        console.log(v);
    }*/

    // function unique(arr){
    // //    将arr去重并返回
    //    return [...new Set(arr)];
    //
    // }

    // function unique(arr){
    //     //    将arr去重并返回
    //     return Array.from(new Set(arr));
    //
    // }
    // console.log(unique([1,2,3,4,4,2,5,6]));

    /*多用于库或者插件的接口等制作时使用*/
    /*map的初始化*/
    var m =  new Map([['name','zhangsan'],['age',88]]);
    console.log(m);
    //值的获取
    console.log(m.get('name'));

    /*值的添加*/
    m.set(18.9,undefined);
    m.set(undefined,NaN);
    // var arr = [1,2,3];
    // m.set(arr,'hello');
    // console.log(m.get(undefined));
    // console.log(m.get(arr));
    // console.log(m.get(m.get(18.9)));//NAN

    /*Map的删除*/
    m.delete(undefined);
    /*清空*/
    m.clear();
    /*Map的遍历*/
    m.forEach(function (value,key) {
        console.log(`${key} => ${value}`);
    })







</script>
</html>